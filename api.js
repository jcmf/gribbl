// Generated by IcedCoffeeScript 1.8.0-c
(function() {
  var iced, __iced_k, __iced_k_noop;

  iced = require('iced-runtime');
  __iced_k = __iced_k_noop = function() {};

  module.exports = function() {
    return require('through2').obj(function(file, enc, cb) {
      var $, $script, PluginError, b, basedir, buf, e, err, fail, inPath, jsStream, replaceExtension, script, text, ___iced_passed_deferral, __iced_deferrals, __iced_k, _ref;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      _ref = require('gulp-util'), PluginError = _ref.PluginError, replaceExtension = _ref.replaceExtension;
      fail = function(e) {
        return cb(new PluginError('gribbl', e));
      };
      if (file.isStream()) {
        return fail('streaming not supported');
      }
      inPath = file.path;
      file.path = replaceExtension(file.path, '.html');
      if (!file.isBuffer()) {
        return cb(null, file);
      }
      text = String(file.contents);
      if (/\.jade$/.test(inPath)) {
        try {
          text = require('jade').render(text, {
            filename: inPath,
            pretty: true
          });
        } catch (_error) {
          e = _error;
          return fail(e);
        }
        text += '\n';
      }
      $ = require('cheerio').load(text);
      (function(_this) {
        return (function(__iced_k) {
          var _i, _len, _ref1, _results, _while;
          _ref1 = $('script').get();
          _len = _ref1.length;
          _i = 0;
          _results = [];
          _while = function(__iced_k) {
            var _break, _continue, _next;
            _break = function() {
              return __iced_k(_results);
            };
            _continue = function() {
              return iced.trampoline(function() {
                ++_i;
                return _while(__iced_k);
              });
            };
            _next = function(__iced_next_arg) {
              _results.push(__iced_next_arg);
              return _continue();
            };
            if (!(_i < _len)) {
              return _break();
            } else {
              script = _ref1[_i];
              $script = $(script);
              jsStream = new require('stream').Readable();
              jsStream._read = function() {};
              jsStream.push($script.html());
              jsStream.push(null);
              basedir = require('path').dirname(inPath);
              b = require('browserify')({
                basedir: basedir,
                entries: [jsStream],
                debug: true
              });
              (function(__iced_k) {
                __iced_deferrals = new iced.Deferrals(__iced_k, {
                  parent: ___iced_passed_deferral,
                  filename: "/Users/zaphod/github/gribbl/api.coffee.md"
                });
                b.bundle(__iced_deferrals.defer({
                  assign_fn: (function() {
                    return function() {
                      err = arguments[0];
                      return buf = arguments[1];
                    };
                  })(),
                  lineno: 57
                }));
                __iced_deferrals._fulfill();
              })(function() {
                if (err) {
                  fail(err);
                }
                return _next($script.replaceWith("<script>" + buf + "</script>"));
              });
            }
          };
          _while(__iced_k);
        });
      })(this)((function(_this) {
        return function() {
          text = $.html();
          file.contents = new Buffer(text);
          return cb(null, file);
        };
      })(this));
    });
  };

}).call(this);
